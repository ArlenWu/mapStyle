import: label.priorities.yaml

########################################################################################################################
######################################################  SOURCES  #######################################################
########################################################################################################################
sources:
  omv:
    type: OMV
    extra_data:
      political_view: global.political_view
    transform:
      political_view: |
        function(data, extraData) {
          if (extraData && extraData.political_view && data.boundaries) {
            const pview = extraData.political_view;
            const features = data.boundaries.features;
            let featureIdx = features.length;
            while (featureIdx--) {
              let properties = features[featureIdx].properties;
              if (properties['kind:'+pview]) {
                properties.kind = properties['kind:'+pview];
              }
            }
          }
          return data;
        }


########################################################################################################################
#######################################################  SCENE  ########################################################
########################################################################################################################
scene:
  background:
    color: global.scene_background_color
  sky:
    zenith: global.scene_sky_zenith_color
    horizon: global.scene_sky_horizon_color
    fog: global.scene_sky_fog_color

########################################################################################################################
########################################################  GLOBAL  ######################################################
########################################################################################################################
global:
  texture_buffer_size: 3px
  ##############################################  UX LANGUAGE FUNCTIONS  ###############################################
  # The order of the language taken into account is: ux_language -> ux_language_fallback -> local name
  ux_language_text_source: |
    function() {
      return (global.ux_language && feature['name:' + global.ux_language]) ||
          (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) ||
          feature['name'];
    }
  ux_language_text_source_short: |
    function() {
      return (global.ux_language && feature['name:short:'+global.ux_language]) ||
          (global.ux_language_fallback && feature['name:short:'+global.ux_language_fallback]) ||
          feature['name:short'];
    }
  # Returns the short name (if available) for zoom levels < 5, otherwise it returns the full name
  ux_language_text_source_short_or_full_fallback: |
    function() {
      return (
        $zoom < 5 && (
          global.ux_language && feature['name:short:'+global.ux_language] ||
          global.ux_language_fallback && feature['name:short:'+global.ux_language_fallback] ||
          feature['name:short']
        ) ||
        global.ux_language && feature['name:' + global.ux_language] ||
        global.ux_language_fallback && feature['name:'+global.ux_language_fallback] ||
        feature['name']
      );
    }
  ux_language_text_source_boundary_lines_left_right:
    left: |
      function() {
        // Obtains the features name:left property either in ux_language, ux_fallback_language or in its local language
        return (global.ux_language && feature['name:left:'+global.ux_language]) ||
            (global.ux_language_fallback && feature['name:left:'+global.ux_language_fallback]) ||
            feature['name:left'];
      }
    right: |
      function() {
        // Obtains the features name:right property either in ux_language, ux_fallback_language or in its local language
        return (global.ux_language && feature['name:right:'+global.ux_language]) ||
            (global.ux_language_fallback && feature['name:right:'+global.ux_language_fallback]) ||
            feature['name:right'];
      }
  ux_language_text_source_boundary_lines: |
    function() {
      var left = (global.ux_language && feature['name:left:'+global.ux_language]) ||
          (global.ux_language_fallback && feature['name:left:'+global.ux_language_fallback]) ||
          feature['name:left'];
      var right;
      if (left) {
        right = (global.ux_language && feature['name:right:'+global.ux_language]) ||
          (global.ux_language_fallback && feature['name:right:'+global.ux_language_fallback]) ||
          feature['name:right'];
      }
      if (left && right) {
          return left + " - " + right;
      } else {
        return (global.ux_language && feature['name:'+global.ux_language]) ||
            (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) ||
            feature.name;
      }
    }
  ux_language_text_source_ocean: |
    function() {
      return (
        (global.ux_language && feature['name:'+global.ux_language]) ||
        (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) ||
        feature['name'] || ''
      ).split('').join(' ').replace(/\s{3}/g, '\n');
    }

  #############################################  MIN ZOOM FEATURE FILTER  ##############################################
  feature_min_zoom_filter: |
    function() {
      return feature.min_zoom === undefined || $zoom >= feature.min_zoom;
    }

  ###########################################  BUILDING EXTRUSION FUNCTION  ############################################
  building_extrude_height: |
    function() {
      if (feature.min_height) {
        return feature.height - feature.min_height;
      } else if (!feature.height) {
        return 5; // default extrusion
      }
      return feature.height;
    }
  building_extrude_min_height: |
    function() {
      return feature.min_height;
    }

  #######################################  BASE MAP FEATURE ORDER AND PRIORITY  ########################################
  feature_order: |
    function() {
      if (feature.sort_rank) {
        return feature.sort_rank
      } else {
        return 0;
      }
    }
  feature_order_half_more: |
    function() {
      if (feature.sort_rank) {
        return feature.sort_rank + 0.5;
      } else {
        return 0;
      }
    }

  ################################################  POPULATION CLASSES  ################################################
  population:
    class1-1m-up: {min: 1000000}
    class2-250k-1m: {min: 250000, max: 1000000}
    class3-100k-250k: {min: 100000, max: 250000}
    class4-30k-100k: {min: 30000, max: 100000}
    class5-until-30k: {max: 30000}

  ###################################################  POLITICAL VIEW  #################################################
  # Possible values could be fetched from the "/pviews" endpoint
  political_view: '' # default

########################################################################################################################
######################################################  TEXTURES  ######################################################
########################################################################################################################
textures:
  icon_library:
    url: icons/sprite-2x.png
    # filtering: mipmap
    density: 2
    sprites:
      area-icon-day--amusement_park: [2, 42, 68, 68]
      area-icon-day--animal_park: [82, 2, 68, 68]
      area-icon-day--golf_course: [154, 2, 68, 68]
      area-icon-day--hospital_complex: [2, 114, 68, 68]
      area-icon-day--industrial_complex: [2, 186, 52, 52]
      area-icon-day--park: [74, 114, 68, 68]
      area-icon-day--shopping_complex: [146, 114, 68, 68]
      area-icon-day--sport_complex: [226, 2, 68, 68]
      area-icon-day--transport_airport: [58, 186, 52, 52]
      area-icon-day--university_campus: [226, 74, 68, 68]
      city-center--capital_day: [154, 74, 22, 22]
      city-center--circle_day: [180, 74, 22, 22]
      city-center--square_day: [82, 74, 22, 22]
      lane-arrow-day--arrow: [114, 186, 52, 52]
      mountain-peak--mountain: [170, 186, 44, 44]
      mountain-peak--volcano: [218, 186, 44, 44]

########################################################################################################################
#######################################################  FONTS  ########################################################
########################################################################################################################
fonts:
  FiraGO:
    - weight: normal
      url: ../fonts/FiraGO-Map.woff
    - weight: normal
      style: italic
      url: ../fonts/FiraGO-Italic.woff

########################################################################################################################
#######################################################  STYLES  #######################################################
########################################################################################################################
styles:

  ######################################################  ICONS  #######################################################
  icon_library:
    base: points
    texture: icon_library
    blend_order: 1
    draw:
      size: global.icon_size
      sprite_default: generic
      buffer: global.texture_buffer_size
      text:
        text_source: global.ux_language_text_source
        anchor: [top-right, top-left, bottom-right, bottom-left, top, bottom]
        buffer: global.texture_buffer_size
        text_wrap: 18
        max_lines: 3
        font:
          family: global.text_font_family
          weight: global.icon.text.font.weight
          fill: global.text_fill
          size: global.icon.text.font.size
          stroke: global.icon.text.font.stroke

  #######################################################  TEXT  #######################################################
  text-blend-order:
    base: text
    blend_order: 1

  #####################################################  POLYGONS  #####################################################
  translucent-polygons:
    base: polygons
    blend: translucent
    material:
      ambient: 1.7
      diffuse: 0.3
  ######################################################  LINES  #######################################################
  translucent-lines:
    base: lines
    blend: translucent
  center-lines:
    base: lines
    blend: opaque
  bridge:
    base: lines
    blend: opaque
    draw:
      order: global.feature_order
      cap: round
      outline:
        cap: butt
        width: [
          [14, 0px],
          [16, 1.5px],
          [17, 2px]
        ]
        color: global.bridge_outline

########################################################################################################################
#######################################################  LAYERS  #######################################################
########################################################################################################################
layers:

  ######################################################  EARTH  #######################################################
  earth:
    data:
      source: omv
      layer: earth
    draw:
      polygons:
        order: 100
        color: global.land_color

  ################################################  LAND-USE AND AREAS  ################################################
  landuse:
    filter: global.feature_min_zoom_filter
    data: {
      source: omv,
      layer: landuse
    }
    draw:
      polygons:
        order: global.feature_order
      lines:
        order: global.feature_order
      draw:
        text-blend-order:
          text_source: global.ux_language_text_source
          priority: global.label.priorities.small-land-use-labels
          text_wrap: 18
          font:
            fill: global.landuse_default_label_color
            family: global.text_font_family
            weight: normal
            size: global.landuse_default_label_font_size
            stroke:
              color: global.landuse_default_label_font_stroke_color
              width: global.landuse_default_label_font_stroke_width
      park:
        filter:
          kind: park
        draw:
          text-blend-order:
            font:
              fill: global.landuse_park_label_color
              stroke:
                color: global.landuse_park_label_outline_color
      forest-national-park:
        filter:
          kind: [forest, national_park, nature_reserve]
        draw:
          text-blend-order:
            priority: global.label.priorities.land-cover-labels
            font:
              fill: global.landuse_forest_label_color
              stroke:
                color: global.landuse_forest_label_outline_color
        national_park-nature_reserve:
          filter:
            kind: [national_park, nature_reserve]
          draw:
            text-blend-order:
              priority: global.label.priorities.large-land-use-labels
      pedestrian:
        filter:
          kind: pedestrian
        draw:
          text-blend-order:
            font:
              fill: global.landuse_pedestrian_label_color
              stroke:
                color: global.landuse_pedestrian_label_outline_color
      beach:
        filter:
          kind: beach
        draw:
          text-blend-order:
            font:
              fill: global.landuse_beach_label_color
              stroke:
                color: global.landuse_beach_label_outline_color
      military:
        filter:
          kind: military
        draw:
          text-blend-order:
            priority: global.label.priorities.large-land-use-labels
            font:
              fill: global.landuse_military_label_color
              stroke:
                color: global.landuse_military_label_outline_color
      other:
        filter:
          kind: [railway, parking]
        draw:
          text-blend-order:
            font:
              fill: global.landuse_gray_label_color
              stroke:
                color: global.landuse_gray_label_outline_color
      industrial:
        filter:
          kind: industrial
        draw:
          text-blend-order:
            font:
              fill: global.landuse_industrial_label_color
              stroke:
                color: global.landuse_industrial_outline_color
      with-icon:
        filter:
          kind: [sports_centre, commercial, zoo, theme_park, hospital, aerodrome, golf_course, university]
        draw:
          icon_library:
            priority: global.label.priorities.small-land-use-labels
            text:
              anchor: [top, bottom, left, right]
              text_wrap: 18
              font:
                size: global.landuse_default_label_font_size
                stroke:
                  color: global.landuse_default_label_font_stroke_color
                  width: 2px
        sports_centre:
          filter:
            kind: sports_centre
          draw:
            icon_library:
              sprite: area-icon-day--sport_complex
              text:
                font:
                  fill: global.landuse_default_label_color
                  stroke:
                    color: global.landuse_default_label_font_stroke_color
        commercial:
          filter:
            kind: commercial
          draw:
            icon_library:
              sprite: area-icon-day--shopping_complex
              text:
                font:
                  fill: global.landuse_gray_label_color
                  stroke:
                    color: global.landuse_gray_label_outline_color
        zoo:
          filter:
            kind: zoo
          draw:
            icon_library:
              sprite: area-icon-day--animal_park
              text:
                font:
                  fill: global.landuse_gray_label_color
                  stroke:
                    color: global.landuse_gray_label_outline_color
        theme_park:
          filter:
            kind: theme_park
          draw:
            icon_library:
              sprite: area-icon-day--amusement_park
              text:
                font:
                  fill: global.landuse_gray_label_color
                  stroke:
                    color: global.landuse_gray_label_outline_color
        hospital:
          filter:
            kind: hospital
          draw:
            icon_library:
              sprite: area-icon-day--hospital_complex
              text:
                font:
                  fill: global.landuse_hospital_label_color
                  stroke:
                    color: global.landuse_hospital_label_outline_color
        aerodrome:
          filter:
            kind: aerodrome
          draw:
            icon_library:
              sprite: area-icon-day--transport_airport
              text:
                font:
                  fill: global.landuse_gray_label_color
                  stroke:
                    color: global.landuse_gray_label_outline_color
        golf:
          filter:
            kind: golf_course
          draw:
            icon_library:
              sprite: area-icon-day--golf_course
              text:
                font:
                  fill: global.landuse_golf_course_label_color
                  stroke:
                    color: global.landuse_golf_course_label_outline_color
        university:
          filter:
            kind: university
          draw:
            icon_library:
              sprite: area-icon-day--university_campus
              text:
                font:
                  fill: global.landuse_university_label_color
                  stroke:
                    color: global.landuse_university_label_outline_color
    wood:
      filter:
        kind: [wood, natural_wood, wetland]
      draw:
        polygons:
          color: global.woodland_color
    forest:
      filter:
        kind: [forest, natural_forest]
      draw:
        polygons:
          color: global.forest_color
    park:
      filter:
        kind: [park, grass]
      draw:
        polygons:
          color: global.park_color
    national_park:
      filter:
        kind: national_park
      draw:
        polygons:
          color: global.national_park_color
    nature_reserve:
      filter:
        kind: nature_reserve
      draw:
        polygons:
          color: global.native_reservation_color
    glacier:
      filter:
        kind: glacier
      draw:
        polygons:
          color: global.glacier_color
    beach:
      filter:
        kind: beach
      draw:
        polygons:
          color: global.beach_color
    builtup:
      filter:
        kind: [residential, urban, urban_area]
      draw:
        polygons:
          color: global.builtup_area_color
        lines:
          color: global.builtup_area_outline_color
          width: global.builtup_area_outline_width
    green-areas:
      filter:
        kind:
          - allotments
          - amusement_ride
          - animal
          - cemetery
          - grave_yard
          - playground
          - pitch
          - recreation-ground
          - recreation_track
          - sports_centre
          - stadium
          - theme_park
          - zoo
      draw:
        polygons:
          color: global.green_area_color
    golf:
      filter:
        kind: golf_course
      draw:
        polygons:
          color: global.golf_course_color
    hospital:
      filter:
        kind: hospital
      draw:
        polygons:
          color: global.hospital_color
    university:
      filter:
        kind: [college, university]
      draw:
        polygons:
          color: global.university_campus_color
    military:
      filter:
        kind: military
      draw:
        polygons:
          color: global.military_color
    pedestrian:
      filter:
        kind: pedestrian
      draw:
        polygons:
          color: global.pedestrian_area_color
    runway:
      filter:
        kind: runway
      draw:
        polygons:
          color: global.runway_color
    aerodrome:
      filter:
        kind: aerodrome
      draw:
        polygons:
          color: global.aerodrome_color
    other:
      filter:
        kind: [industrial, railway, commercial, bridge, parking]
      draw:
        polygons:
          color: global.industrial_color

  ######################################################  WATER  #######################################################
  water:
    data: {source: omv, layer: water}
    draw:
      polygons:
        order: global.feature_order
        color: global.water_color
    small_water:
      filter:
        kind: [basin, lake, dock, playa, riverbank]
      draw:
        polygons:
          color: global.water_color
    deep_water:
      filter:
        all:
          - $geometry: polygon
          - kind: [ocean, sea]
      draw:
        polygons:
          color: global.water_deep_color
    river:
      filter:
        all:
          - kind: [river, canal, ditch, drain, stream]
          - $geometry: line
      draw:
        lines:
          order: global.feature_order
          width: global.water_river_line_width
          color: global.water_color
          cap: round
    water-labels:
      filter:
        all:
          - name: true
      draw:
        text-blend-order:
          text_source: global.ux_language_text_source
          visible: global.text_visible_water_labels
          priority: global.label.priorities.water-labels
          font:
            fill: global.water_label_sea_color
            family: global.text_font_family
            weight: global.water.default.label.font.weight
            size: global.water.default.label.font.size
            style: global.water.default.label.font.style
      ocean-labels:
        filter:
          all:
            - kind: [ocean]
            # TODO: Additional filter needed due to OLPRPS-3988. Remove it when OMV is fixed!
            - function() {
                var name = feature.name || feature['name:en'];
                return name && name.indexOf('Ocean') != -1
              }
        draw:
          text-blend-order:
            text_source: global.ux_language_text_source_ocean
            text_wrap: false
            priority: global.label.priorities.ocean-labels
            font:
              fill: global.water_label_ocean_color
              size: global.water.ocean.label.font.size
              style: global.water.ocean.label.font.style
      sea-labels:
        filter:
          all:
            - kind: sea
            - global.feature_min_zoom_filter
        draw:
          text-blend-order:
            priority: global.label.priorities.sea-labels
      bay-labels:
        filter:
          all:
           - kind: bay
           - global.feature_min_zoom_filter
        draw:
          text-blend-order:
            font:
              fill: global.water_label_bay_color
              size: global.water.bay.label.font.size
              stroke:
                color: global.water_label_bay_outline_color
                width: global.water.bay.label.font.stroke.width
      lake-labels:
        filter:
          all:
          - kind: lake
          - global.feature_min_zoom_filter
        draw:
          text-blend-order:
            font:
              fill: global.water_label_lake_color
              family: global.text_font_family
              style: global.water.lake.label.font.style
              stroke:
                color: global.water_label_lake_outline_color
                width: global.water.lake.label.font.stroke.width
  #####################################################  BORDERS  ######################################################


  ######################################################  ROADS  #######################################################
  roads:
    filter: global.feature_min_zoom_filter
    data: {source: omv, layer: roads}
    draw:
      lines:
        order: 340
        join: round
        cap: round
        # Uncomment the next line for debugging to render not-styled roads:
        # color: red
        width: global.road.default.line.width
        outline:
          order: 352
    directions:
      filter:
        all:
          - $zoom: {min: 16}
          - oneway: yes
          - under_construction: false
      draw:
        points:
          priority: global.label.priorities.one-way-arrow-labels
          texture: icon_library
          sprite: lane-arrow-day--arrow
          size: global.road.default.direction.size
          placement: spaced
          placement_spacing: global.road.default.direction.spacing
          angle: auto
          flat: true
      minor_road:
        filter:
          kind: minor_road
          $zoom: global.road.minor.direction.zoom
        draw:
          points:
            visible: false
      ski_run:
        filter:
          kind: piste
        draw:
          points:
            size: global.road.ski_run.piste.directions.size
    rail:
      filter:
        all:
          - kind: rail
          - under_construction: false
          - $zoom: global.road.rail.zoom
          - global.feature_min_zoom_filter
      draw:
        lines:
          order: global.feature_order
          width: global.road.rail.line.width
          color: global.rail_dash_color
          dash: global.road.rail.line.dash
          dash_background_color: global.rail_dash_background_color
          outline:
            color: global.rail_outline_color
            width: global.road.rail.outline.width
    under_construction:
      filter:
        under_construction: true
      draw:
        lines:
          cap: butt
          dash: global.road.under_construction.line.dash
        center-lines:
          visible: false
      bridge:
        filter:
          is_bridge: true
        draw:
          bridge:
            cap: butt
            dash: global.road.under_construction.line.dash
    highway:
      filter:
        kind: highway
      draw:
        lines:
          order: global.feature_order
          color: global.highway_fill
          width: global.highway_width
          outline:
            color: global.highway_outline
            width: global.road.highway.outline.width
        center-lines:
          order: global.feature_order_half_more
          color: global.highway_centerline_fill
          width: global.road.highway.centerline.width
      bridge:
        filter:
          is_bridge: true
        draw:
          bridge:
            color: global.highway_fill
            width: global.highway_width
      tunnel:
        filter:
          is_tunnel: true
        draw:
          lines:
            order: global.tunnel_order
            color: global.highway_tunnel_fill
          center-lines:
            order: global.tunnel_order
            color: global.highway_tunnel_center_line
      link:
        filter:
          is_link: true
        draw:
          lines:
            width: global.highway_link_width
          center-lines:
            visible: false
        trunk:
          filter:
            kind_detail: trunk
          draw:
            lines:
              width: global.highway_link_width
        bridge:
          filter:
            is_bridge: true
          draw:
            bridge:
              width: global.highway_link_width
      trunk:
        filter:
          kind_detail: trunk
        draw:
          lines:
            width: global.highway_trunk_width
            color: global.major_road_fill
            outline:
               width: global.road.highway.trunk.outline.width
          center-lines:
            visible: false
        bridge:
          filter:
            is_bridge: true
          draw:
            bridge:
              color: global.major_road_fill
              width: global.major_road_width
        tunnel:
          filter:
            is_tunnel: true
          draw:
            lines:
              order: global.tunnel_order
              color: global.major_road_tunnel_fill
    major_road:
      filter:
        kind: major_road
      draw:
        lines:
          color: global.major_road_fill
          order: global.feature_order
          width: global.major_road_width
          outline:
            color: global.major_road_outline
            width: global.road.major.outline.width
      bridge:
        filter:
          is_bridge: true
        draw:
          bridge:
            color: global.major_road_fill
            width: global.major_road_width
      tunnel:
        filter:
          is_tunnel: true
        draw:
          lines:
            order: global.tunnel_order
            color: global.major_road_tunnel_fill
      link:
        filter:
          is_link: true
        draw:
          lines:
            color: global.major_road_fill
            width: global.major_road_link_width
      secondary:
        filter:
          kind_detail: [secondary, secondary_link]
        draw:
          lines:
            color: global.major_road_secondary_fill
            width: global.major_road_secondary_width
            outline:
              color: global.major_road_secondary_outline
              width: global.road.major.secondary.outline.width
        link:
          filter:
            is_link: true
          draw:
            lines:
              color: global.major_road_secondary_fill
              width: global.major_road_secondary_link_width
        bridge:
          filter:
            is_bridge: true
          draw:
            bridge:
              color: global.major_road_secondary_fill
              width: global.major_road_secondary_width
        tunnel:
          filter:
            is_tunnel: true
          draw:
            lines:
              order: global.tunnel_order
              color: global.major_road_secondary_tunnel_fill
      tertiary:
        filter:
          kind_detail: [tertiary, tertiary_link]
        draw:
          lines:
            color: global.major_road_tertiary_fill
            width: global.major_road_tertiary_width
            outline:
              color: global.major_road_tertiary_outline
              width: global.road.major.tertiary.outline.width
        link:
          filter:
            is_link: true
          draw:
            lines:
              color: global.major_road_tertiary_fill
              width: global.road.major.tertiary.link.line.width
        bridge:
          filter:
            is_bridge: true
          draw:
            bridge:
              color: global.major_road_tertiary_fill
              width: global.major_road_tertiary_width
        tunnel:
          filter:
            is_tunnel: true
          draw:
            lines:
              order: global.tunnel_order
              color: global.major_road_tertiary_tunnel_fill
    minor_road:
      filter:
        kind: minor_road
      draw:
        lines:
          order: global.feature_order
          width: global.minor_road_width
      residential:
        filter:
          kind_detail: residential
        draw:
          lines:
            color: global.minor_road_residential_fill
            outline:
              color: global.minor_road_residential_outline
              width: global.road.minor.residential.outline.width
        bridge:
          filter:
            is_bridge: true
          draw:
            bridge:
              color: global.minor_road_residential_fill
              width: global.minor_road_width
        tunnel:
          filter:
            is_tunnel: true
          draw:
            lines:
              order: global.tunnel_order
              color: global.minor_road_residential_tunnel_fill
      service:
        filter:
          kind_detail: [service, unclassified, road]
        draw:
          lines:
            color: global.minor_road_service_fill
            width: global.minor_road_width
            outline:
              color: global.minor_road_service_outline
              width: global.road.minor.service.outline.width
        bridge:
          filter:
            is_bridge: true
          draw:
            bridge:
              color: global.minor_road_service_fill
              width: global.minor_road_width
        tunnel:
          filter:
            is_tunnel: true
          draw:
            lines:
              order: global.tunnel_order
              color: global.minor_road_service_tunnel_fill
      unpaved:
        filter: {surface: unpaved}
        draw:
          lines:
            order: |
              function() {
                return feature.sort_rank - 0.5
              }
            color: global.minor_road_unpaved_fill
    path:
      filter:
        kind: path
      pedestrian:
        filter:
          kind_detail: pedestrian
        draw:
          lines:
            order: global.feature_order
            width: global.road.path.pedestrian.line.width
            color: global.path_pedestrian
            dash: global.road.path.pedestrian.line.dash
      footway:
        filter:
          kind_detail: footway
        draw:
          lines:
            order: global.feature_order
            color: global.path_footway
            width: global.road.path.footway.line.width
        bridge:
          filter:
            is_bridge: true
          draw:
            bridge:
              color: global.path_footway
              width: global.road.path.footway.bridge.line.width
              outline:
                width: global.road.path.footway.bridge.outline.width
        tunnel:
          filter:
            is_tunnel: true
          draw:
            lines:
              order: global.tunnel_order
              color: global.path_footway_tunnel_fill
        cemetery:
          filter: {landuse_kind: cemetery}
          draw: {lines: {color: global.path_footway_cemetery}}
        forest:
          filter: {landuse_kind: forest}
          draw: {lines: {color: global.path_footway_forest}}
        park:
          filter: {landuse_kind: park}
          draw: {lines: {color: global.path_footway_park}}
    ferry:
      filter:
        kind: ferry
      draw:
        lines:
          order: global.feature_order
          color: global.ferry_line_color
          width: global.road.ferry.line.width
          dash: global.road.ferry.line.dash
      tunnel:
        filter:
          is_tunnel: true
        draw:
          lines:
            dash: global.road.ferry.tunnel.line.dash
            color: global.road.ferry.tunnel.line.color
            dash_background_color: global.ferry_tunnel_color
    aerialway:
      filter:
        kind: aerialway
      cable_car:
        filter:
          kind_detail: [cable_car, gondola]
        draw:
          lines:
            # To remove once OLPRPS-6877 is solved - push cable cars on top of other roads
            order: 1001
            color: global.road.aerialway.cable_car.line.color
            width: global.road.aerialway.cable_car.line.width
      chair_lift:
        filter:
          kind_detail: chair_lift
        draw:
          lines:
            order: global.feature_order
            color: global.road.aerialway.chair_lift.line.color
            width: global.road.aerialway.chair_lift.line.width
    ski_run:
      filter:
        kind: piste
        kind_detail: downhill
      draw:
        lines:
          order: global.feature_order
          color: global.road.ski_run.piste.line.color
          width: global.road.ski_run.piste.line.width
          outline:
            color: global.road.ski_run.piste.outline.color
            width: global.road.ski_run.piste.outline.width
  ###################################################  ROAD LABELS  ####################################################
  road_labels:
    data: {source: omv, layer: road_labels}
    draw:
      text-blend-order:
        visible: global.text_visible_roads
        text_source: global.ux_language_text_source
        font:
          fill: global.text_fill
          family: global.text_font_family
          stroke:
            color: global.text_outline
            width: global.road.default.label.font.stroke.width
    highway:
      filter:
        kind: highway
      draw:
        text-blend-order:
          priority: global.label.priorities.road0-labels
          font:
            size: global.road.highway.label.font.size
      link:
        filter:
          kind_detail: motorway_link
        draw:
          text-blend-order:
            font:
              size: global.road.highway.link.label.font.size
      trunk:
        filter:
          kind_detail: trunk
        draw:
          text-blend-order:
            priority: global.label.priorities.road1-labels
            font:
              size: global.road.highway.trunk.label.font.size
    major_road:
      filter:
        kind: major_road
      draw:
        text-blend-order:
          priority: global.label.priorities.road2-labels
          offset: global.road.major.label.offset
          font:
            stroke:
              width: global.road.major.label.font.stroke.width
            size: global.road.major.label.font.size
      primary:
        filter:
          kind_detail: primary
        draw:
          text-blend-order:
            priority: global.label.priorities.road1-labels
      secondary:
        filter:
          kind_detail: secondary
        draw:
          text-blend-order:
            priority: global.label.priorities.road2-labels
            offset: global.road.major.secondary.label.offset
            font:
              stroke:
                width: global.road.major.secondary.label.font.stroke.width
              size: global.road.major.secondary.label.font.size
      tertiary:
        filter:
          kind_detail: tertiary
        draw:
          text-blend-order:
            priority: global.label.priorities.road3-labels
            font:
              stroke:
                width: global.road.major.tertiary.label.font.stroke.width
              size: global.road.major.tertiary.label.font.size
    minor_road:
      filter:
        kind: minor_road
      draw:
        text-blend-order:
          offset: global.road.minor.label.offset
          priority: global.label.priorities.road4-labels
          font:
            stroke:
              width: global.road.minor.label.font.stroke.width
            size: global.road.minor.label.font.size
      service:
        filter:
          kind_detail: [service, unclassified, road]
        draw:
          text-blend-order:
            font:
              stroke:
                width: global.road.minor.service.label.font.stroke.width
              size: global.road.minor.service.label.font.size
    path:
      filter:
        kind: path
      draw:
        text-blend-order:
          offset: global.road.path.label.offset
          priority: global.label.priorities.pedestrian-labels
          font:
            fill: global.road.path.label.font.fill
            stroke:
              color: global.road.path.label.font.stroke.color
              width: global.road.path.label.font.stroke.width
            size: global.road.path.label.font.size
      unpaved:
        filter: {surface: unpaved}
        draw:
          text-blend-order:
            font:
              fill: global.road.path.unpaved.label.font.fill
              stroke:
                color: global.road.path.unpaved.label.font.stroke.color
      footway:
        filter:
          all:
            - kind_detail: footway
            - $zoom: global.road.path.footway.label.zoom
        draw:
          text-blend-order:
            priority: global.label.priorities.walkway-labels
            offset: global.road.path.footway.label.offset
            font:
              fill: global.road.path.footway.label.font.fill
              size: global.road.path.footway.label.font.size
    ferry:
      filter:
        kind: ferry
      draw:
        text-blend-order:
          text_source: global.ux_language_text_source
          offset: global.road.ferry.label.offset
          visible: global.text_visible_ferry
          priority: global.label.priorities.ferry-labels
          font:
            fill: global.ferry_label_color
            stroke:
              color: global.ferry_label_outline_color
              width: global.road.ferry.label.font.stroke.width
            size: global.road.ferry.label.font.size
      tunnel:
        filter:
          is_tunnel: true
        draw:
          text-blend-order:
            font:
              fill: global.ferry_tunnel_color
              stroke:
                color: global.road.ferry.tunnel.label.font.stroke.color
    chair_lift:
      filter:
        kind: aerialway
        kind_detail: chair_lift
      draw:
        text-blend-order:
          text_source: global.ux_language_text_source
          visible: global.text_visible_chair_lift
          priority: global.label.priorities.chairlift-labels
          font:
            fill: global.road.aerialway.chair_lift.label.font.fill
            size: global.road.aerialway.chair_lift.label.font.size
            stroke:
              color: global.road.aerialway.chair_lift.label.font.stroke.fill
              width: global.road.aerialway.chair_lift.label.font.stroke.width
    ski_run:
      filter:
        kind: piste
        kind_detail: downhill
      draw:
        text-blend-order:
          text_source: global.ux_language_text_source
          visible: global.text_visible_ski_run
          offset: global.road.ski_run.label.piste.offset
          priority: global.label.priorities.skirundownhill-labels
          font:
            fill: global.road.ski_run.piste.label.font.fill
            size: global.road.ski_run.piste.label.font.size
            stroke:
              color: global.road.ski_run.piste.label.font.stroke.color
              width: global.road.ski_run.piste.label.font.stroke.width
  ####################################################  BUILDINGS  #####################################################


  ####################################################  CONTINENTS  ####################################################


  ######################################################  PLACES  ######################################################

  ######################################################  ISLAND  ######################################################

